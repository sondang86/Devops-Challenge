# Default values for playstudios-http-echo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

#######Playstudios DevOps Technical Challenge#######
#######The application's image name and tag is hashicorp/http-echo:0.2.3#######
image:
  repository: hashicorp/http-echo
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.2.3"

service:
  type: ClusterIP
  port: 5678

####### Ingress rule to redirect Nginx Ingress to internal pod #######
ingress:
  enabled: true
  hosts:
    - host: localhost
      paths:
      - path: '/'
        pathType: Prefix  
        backend:
          service:
            name: playstudios-echo-app-playstudios-http-echo
            port:
              number: 5678
#####################


#  host: {{.Release.Name}}.k8s.local
#  defaultBackend: false
#   kubernetes.io/ingress.class: ""
  tls: {}



imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
